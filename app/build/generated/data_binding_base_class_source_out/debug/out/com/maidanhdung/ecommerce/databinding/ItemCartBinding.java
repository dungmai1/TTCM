// Generated by view binder compiler. Do not edit!
package com.maidanhdung.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maidanhdung.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCartBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView deleteitem;

  @NonNull
  public final ImageView imageviewCart;

  @NonNull
  public final TextView txtPriceCart;

  @NonNull
  public final TextView txtProductNameCart;

  private ItemCartBinding(@NonNull CardView rootView, @NonNull ImageView deleteitem,
      @NonNull ImageView imageviewCart, @NonNull TextView txtPriceCart,
      @NonNull TextView txtProductNameCart) {
    this.rootView = rootView;
    this.deleteitem = deleteitem;
    this.imageviewCart = imageviewCart;
    this.txtPriceCart = txtPriceCart;
    this.txtProductNameCart = txtProductNameCart;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteitem;
      ImageView deleteitem = ViewBindings.findChildViewById(rootView, id);
      if (deleteitem == null) {
        break missingId;
      }

      id = R.id.imageviewCart;
      ImageView imageviewCart = ViewBindings.findChildViewById(rootView, id);
      if (imageviewCart == null) {
        break missingId;
      }

      id = R.id.txtPriceCart;
      TextView txtPriceCart = ViewBindings.findChildViewById(rootView, id);
      if (txtPriceCart == null) {
        break missingId;
      }

      id = R.id.txtProductNameCart;
      TextView txtProductNameCart = ViewBindings.findChildViewById(rootView, id);
      if (txtProductNameCart == null) {
        break missingId;
      }

      return new ItemCartBinding((CardView) rootView, deleteitem, imageviewCart, txtPriceCart,
          txtProductNameCart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
